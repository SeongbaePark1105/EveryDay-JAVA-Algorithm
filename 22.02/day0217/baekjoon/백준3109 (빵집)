package baekjoon;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class bk3109 {
	static int R, C; // 행 과 열
	static char[][] arr;
	static boolean[][] visit;
	static int cnt;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		R = Integer.parseInt(st.nextToken());
		C = Integer.parseInt(st.nextToken());
		arr = new char[R][C];
		visit = new boolean[R][C];
		for (int i = 0; i < R; i++) {
			String str = br.readLine();
			for (int j = 0; j < C; j++)
				arr[i][j] = str.charAt(j);
		}
		for (int i = 0; i < R; i++) {
			if (checkpipe(i, 0))
				cnt++;
		}
		System.out.println(cnt);
	}

	static boolean checkpipe(int col, int row) {

		if (row == C - 1)
			return true;
		if (col > 0 && arr[col - 1][row + 1] == '.' && visit[col - 1][row + 1] != true) {
			visit[col - 1][row + 1] = true;
			if (checkpipe(col - 1, row + 1))
				return true;
		}
		if (arr[col][row + 1] == '.' && visit[col][row + 1] != true) {
			visit[col][row + 1] = true;
			if (checkpipe(col, row + 1))
				return true;
		}
		if (col + 1 < R && arr[col + 1][row + 1] == '.' && visit[col + 1][row + 1] != true) {
			visit[col + 1][row + 1] = true;

			if (checkpipe(col + 1, row + 1))
				return true;
		}
		return false;
	}
}
